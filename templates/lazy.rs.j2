// DO NOT CHANGE THIS FILE. IT IS AUTOMATICALLY GENERATED BY build.rs.
use lazy_static::lazy_static;
use std::collections::HashMap;
use crate::decap;

lazy_static! {
    static ref DATA: HashMap<String, HashMap<String, String>> = {
        let data = include_bytes!("{{ name }}.bin");
        decap(data)
    }
    {% if fill %}
    pub static ref FILL: &'static HashMap<String, String> = DATA.get("fill").expect("fill");
    {% endif %}
    {% if normal %}
    pub static ref NORMAL: &'static HashMap<String, String> = DATA.get("normal").expect("normal");
    {% endif %}
    {% if outline %}
    pub static ref OUTLINE: &'static HashMap<String, String> = DATA.get("outline").expect("outline");
    {% endif %}
    {% if sharp %}
    pub static ref SHARP: &'static HashMap<String, String> = DATA.get("sharp").expect("sharp");
    {% endif %}
    {% if solid %}
    pub static ref SOLID: &'static HashMap<String, String> = DATA.get("solid").expect("solid");
    {% endif %}
    {% if regular %}
    pub static ref REGULAR: &'static HashMap<String, String> = DATA.get("regular").expect("regular");
    {% endif %}
}
